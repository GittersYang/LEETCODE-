给定一个整数数组，判断数组中是否有两个不同的索引 i 和 j，使得 nums [i] 和 nums [j] 的差的绝对值最大为 t，并且 i 和 j 之间的差的绝对值最大为 ķ。

示例 1:

输入: nums = [1,2,3,1], k = 3, t = 0
输出: true

class Solution {
public:
    bool containsNearbyAlmostDuplicate(vector<int>& nums, int k, int t) {
        set<long long>s;
        for(int i=0;i<nums.size();i++){
            if(s.lower_bound((long long)nums[i]-(long long)t)!=s.end() && *s.lower_bound((long long)nums[i]-(long long)t)<=(long long)nums[i]+(long long)t) return true;
            else s.insert(nums[i]);
            if(s.size()==k+1) s.erase(nums[i-k]);
        }
        return false;
    }
};

