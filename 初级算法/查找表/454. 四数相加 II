给定四个包含整数的数组列表 A , B , C , D ,计算有多少个元组 (i, j, k, l) ，使得 A[i] + B[j] + C[k] + D[l] = 0。

为了使问题简单化，所有的 A, B, C, D 具有相同的长度 N，且 0 ≤ N ≤ 500 。所有整数的范围在 -228 到 228 - 1 之间，最终结果不会超过 231 - 1 。

例如:

输入:
A = [ 1, 2]
B = [-2,-1]
C = [-1, 2]
D = [ 0, 2]

输出:
2

暴力循环是o n……4的复杂度，所以将c+d的和放入查找表进行两层的循环

class Solution {
public:
    int fourSumCount(vector<int>& A, vector<int>& B, vector<int>& C, vector<int>& D) {
        
        unordered_map<int,int> m;
        for(int i=0;i<C.size();i++){
            for(int j=0;j<D.size();j++){
                m[C[i]+D[j]]++;
            }
        }
        int res=0;
         for(int i=0;i<A.size();i++){
            for(int j=0;j<B.size();j++){
                if(m.find(-A[i]-B[j])!=m.end()){
                    res+=m[-A[i]-B[j]];

                }
            }
        }
        return res;
    }
};
