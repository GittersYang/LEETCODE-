删除链表中等于给定值 val 的所有节点。

示例:

输入: 1->2->6->3->4->5->6, val = 6
输出: 1->2->3->4->5


一、注意删除节点是头节点的情况和头节点为空的情况
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        while(head!=NULL && head->val==val){
            ListNode* delnode=head;
            head=delnode->next;
            delete delnode;
            
        }
        if(head==NULL){
            return NULL;
        }
        ListNode* cur=head;
        while(cur->next!=NULL){
            if(cur->next->val==val){
                ListNode* delnode=cur->next;
                cur->next=delnode->next;
                delete delnode;
                
            }
            else{
                cur=cur->next;
            }
        }
        return head;
    }
};

二、采用虚拟节点  注意返回值
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        ListNode* dummyHead=new ListNode(-1);
        dummyHead->next=head;
        ListNode* cur=dummyHead;
        while(cur->next!=NULL){
            if(cur->next->val==val){
                ListNode* delnode=cur->next;
                cur->next=delnode->next;
                delete delnode;
                
            }
            else{
                cur=cur->next;
            }
        }
        ListNode* ret=dummyHead->next;
        delete dummyHead;
        return ret;
    }
};
