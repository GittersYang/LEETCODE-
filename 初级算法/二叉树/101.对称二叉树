递归

class Solution {
public:
    bool isSymmetric(TreeNode* root) 
    {
        if(root == NULL)    return true;
        return isMirror(root->left,root->right);
    }
    
    bool isMirror(TreeNode *p,TreeNode *q)          //递归函数
    {
        if(!p && !q)        return true;        //如果p,q均为NULL
        if(!p || !q)        return false;       //p,q只有一者为NULL

        return (p->val==q->val) && isMirror(p->left,q->right) && isMirror(p->right,q->left);        
    }
};

、
广度优先遍历 队列
class Solution {
public:
    bool isSymmetric(TreeNode* root) {
        if(!root) return true;
        queue<TreeNode*> q;
        q.push(root);
        while(!q.empty()){
            int size = q.size();
            vector<int> v(size);
            for(int i = 0; i<size; ++i){
                root = q.front(); q.pop();
                v[i] = root ? root->val : INT_MIN;
                if(root) { q.push(root->left); q.push(root->right); }
            }
            // 判断是否回文
            for(int i = 0; i< size/2; ++i){
                if(v[i] != v[size-1-i]) return false;
            }
        }
        return true;
    }
};

作者：zuo-10
链接：https://leetcode-cn.com/problems/symmetric-tree/solution/c-bfshe-dfsjie-jue-dui-cheng-er-cha-shu-wen-ti-by-/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
