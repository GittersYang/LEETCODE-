给定一个含有 n 个正整数的数组和一个正整数 s ，找出该数组中满足其和 ≥ s 的长度最小的连续子数组，并返回其长度。如果不存在符合条件的连续子数组，返回 0。

示例: 

输入: s = 7, nums = [2,3,1,2,4,3]
输出: 2
解释: 子数组 [4,3] 是该条件下的长度最小的连续子数组。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/minimum-size-subarray-sum
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

class Solution {
public:
    int minSubArrayLen(int s, vector<int>& nums) {
        int l=0,r=-1;
        int sum =0;
        int res = nums.size()+1;//[l,r]
        while(l<nums.size()){
            if(r+1<nums.size()&&sum<s){
                r++;
                sum+=nums[r];
            }
            else{
                sum-=nums[l];
                l++;
            }
            if(sum>=s){
                res=min(res,r-l+1);
            }
        }
        if(res==nums.size()+1) return 0;
        return res;

    }
};
